n = 128
dx = 0.007812
alpha = 0.491520
Mat Object: 1 MPI processes
  type: seqaij
row 0: (0, 0.01696)  (1, 0.49152) 
row 1: (0, 0.49152)  (1, 0.01696)  (2, 0.49152) 
row 2: (1, 0.49152)  (2, 0.01696)  (3, 0.49152) 
row 3: (2, 0.49152)  (3, 0.01696)  (4, 0.49152) 
row 4: (3, 0.49152)  (4, 0.01696)  (5, 0.49152) 
row 5: (4, 0.49152)  (5, 0.01696)  (6, 0.49152) 
row 6: (5, 0.49152)  (6, 0.01696)  (7, 0.49152) 
row 7: (6, 0.49152)  (7, 0.01696)  (8, 0.49152) 
row 8: (7, 0.49152)  (8, 0.01696)  (9, 0.49152) 
row 9: (8, 0.49152)  (9, 0.01696)  (10, 0.49152) 
row 10: (9, 0.49152)  (10, 0.01696)  (11, 0.49152) 
row 11: (10, 0.49152)  (11, 0.01696)  (12, 0.49152) 
row 12: (11, 0.49152)  (12, 0.01696)  (13, 0.49152) 
row 13: (12, 0.49152)  (13, 0.01696)  (14, 0.49152) 
row 14: (13, 0.49152)  (14, 0.01696)  (15, 0.49152) 
row 15: (14, 0.49152)  (15, 0.01696)  (16, 0.49152) 
row 16: (15, 0.49152)  (16, 0.01696)  (17, 0.49152) 
row 17: (16, 0.49152)  (17, 0.01696)  (18, 0.49152) 
row 18: (17, 0.49152)  (18, 0.01696)  (19, 0.49152) 
row 19: (18, 0.49152)  (19, 0.01696)  (20, 0.49152) 
row 20: (19, 0.49152)  (20, 0.01696)  (21, 0.49152) 
row 21: (20, 0.49152)  (21, 0.01696)  (22, 0.49152) 
row 22: (21, 0.49152)  (22, 0.01696)  (23, 0.49152) 
row 23: (22, 0.49152)  (23, 0.01696)  (24, 0.49152) 
row 24: (23, 0.49152)  (24, 0.01696)  (25, 0.49152) 
row 25: (24, 0.49152)  (25, 0.01696)  (26, 0.49152) 
row 26: (25, 0.49152)  (26, 0.01696)  (27, 0.49152) 
row 27: (26, 0.49152)  (27, 0.01696)  (28, 0.49152) 
row 28: (27, 0.49152)  (28, 0.01696)  (29, 0.49152) 
row 29: (28, 0.49152)  (29, 0.01696)  (30, 0.49152) 
row 30: (29, 0.49152)  (30, 0.01696)  (31, 0.49152) 
row 31: (30, 0.49152)  (31, 0.01696)  (32, 0.49152) 
row 32: (31, 0.49152)  (32, 0.01696)  (33, 0.49152) 
row 33: (32, 0.49152)  (33, 0.01696)  (34, 0.49152) 
row 34: (33, 0.49152)  (34, 0.01696)  (35, 0.49152) 
row 35: (34, 0.49152)  (35, 0.01696)  (36, 0.49152) 
row 36: (35, 0.49152)  (36, 0.01696)  (37, 0.49152) 
row 37: (36, 0.49152)  (37, 0.01696)  (38, 0.49152) 
row 38: (37, 0.49152)  (38, 0.01696)  (39, 0.49152) 
row 39: (38, 0.49152)  (39, 0.01696)  (40, 0.49152) 
row 40: (39, 0.49152)  (40, 0.01696)  (41, 0.49152) 
row 41: (40, 0.49152)  (41, 0.01696)  (42, 0.49152) 
row 42: (41, 0.49152)  (42, 0.01696)  (43, 0.49152) 
row 43: (42, 0.49152)  (43, 0.01696)  (44, 0.49152) 
row 44: (43, 0.49152)  (44, 0.01696)  (45, 0.49152) 
row 45: (44, 0.49152)  (45, 0.01696)  (46, 0.49152) 
row 46: (45, 0.49152)  (46, 0.01696)  (47, 0.49152) 
row 47: (46, 0.49152)  (47, 0.01696)  (48, 0.49152) 
row 48: (47, 0.49152)  (48, 0.01696)  (49, 0.49152) 
row 49: (48, 0.49152)  (49, 0.01696)  (50, 0.49152) 
row 50: (49, 0.49152)  (50, 0.01696)  (51, 0.49152) 
row 51: (50, 0.49152)  (51, 0.01696)  (52, 0.49152) 
row 52: (51, 0.49152)  (52, 0.01696)  (53, 0.49152) 
row 53: (52, 0.49152)  (53, 0.01696)  (54, 0.49152) 
row 54: (53, 0.49152)  (54, 0.01696)  (55, 0.49152) 
row 55: (54, 0.49152)  (55, 0.01696)  (56, 0.49152) 
row 56: (55, 0.49152)  (56, 0.01696)  (57, 0.49152) 
row 57: (56, 0.49152)  (57, 0.01696)  (58, 0.49152) 
row 58: (57, 0.49152)  (58, 0.01696)  (59, 0.49152) 
row 59: (58, 0.49152)  (59, 0.01696)  (60, 0.49152) 
row 60: (59, 0.49152)  (60, 0.01696)  (61, 0.49152) 
row 61: (60, 0.49152)  (61, 0.01696)  (62, 0.49152) 
row 62: (61, 0.49152)  (62, 0.01696)  (63, 0.49152) 
row 63: (62, 0.49152)  (63, 0.01696)  (64, 0.49152) 
row 64: (63, 0.49152)  (64, 0.01696)  (65, 0.49152) 
row 65: (64, 0.49152)  (65, 0.01696)  (66, 0.49152) 
row 66: (65, 0.49152)  (66, 0.01696)  (67, 0.49152) 
row 67: (66, 0.49152)  (67, 0.01696)  (68, 0.49152) 
row 68: (67, 0.49152)  (68, 0.01696)  (69, 0.49152) 
row 69: (68, 0.49152)  (69, 0.01696)  (70, 0.49152) 
row 70: (69, 0.49152)  (70, 0.01696)  (71, 0.49152) 
row 71: (70, 0.49152)  (71, 0.01696)  (72, 0.49152) 
row 72: (71, 0.49152)  (72, 0.01696)  (73, 0.49152) 
row 73: (72, 0.49152)  (73, 0.01696)  (74, 0.49152) 
row 74: (73, 0.49152)  (74, 0.01696)  (75, 0.49152) 
row 75: (74, 0.49152)  (75, 0.01696)  (76, 0.49152) 
row 76: (75, 0.49152)  (76, 0.01696)  (77, 0.49152) 
row 77: (76, 0.49152)  (77, 0.01696)  (78, 0.49152) 
row 78: (77, 0.49152)  (78, 0.01696)  (79, 0.49152) 
row 79: (78, 0.49152)  (79, 0.01696)  (80, 0.49152) 
row 80: (79, 0.49152)  (80, 0.01696)  (81, 0.49152) 
row 81: (80, 0.49152)  (81, 0.01696)  (82, 0.49152) 
row 82: (81, 0.49152)  (82, 0.01696)  (83, 0.49152) 
row 83: (82, 0.49152)  (83, 0.01696)  (84, 0.49152) 
row 84: (83, 0.49152)  (84, 0.01696)  (85, 0.49152) 
row 85: (84, 0.49152)  (85, 0.01696)  (86, 0.49152) 
row 86: (85, 0.49152)  (86, 0.01696)  (87, 0.49152) 
row 87: (86, 0.49152)  (87, 0.01696)  (88, 0.49152) 
row 88: (87, 0.49152)  (88, 0.01696)  (89, 0.49152) 
row 89: (88, 0.49152)  (89, 0.01696)  (90, 0.49152) 
row 90: (89, 0.49152)  (90, 0.01696)  (91, 0.49152) 
row 91: (90, 0.49152)  (91, 0.01696)  (92, 0.49152) 
row 92: (91, 0.49152)  (92, 0.01696)  (93, 0.49152) 
row 93: (92, 0.49152)  (93, 0.01696)  (94, 0.49152) 
row 94: (93, 0.49152)  (94, 0.01696)  (95, 0.49152) 
row 95: (94, 0.49152)  (95, 0.01696)  (96, 0.49152) 
row 96: (95, 0.49152)  (96, 0.01696)  (97, 0.49152) 
row 97: (96, 0.49152)  (97, 0.01696)  (98, 0.49152) 
row 98: (97, 0.49152)  (98, 0.01696)  (99, 0.49152) 
row 99: (98, 0.49152)  (99, 0.01696)  (100, 0.49152) 
row 100: (99, 0.49152)  (100, 0.01696)  (101, 0.49152) 
row 101: (100, 0.49152)  (101, 0.01696)  (102, 0.49152) 
row 102: (101, 0.49152)  (102, 0.01696)  (103, 0.49152) 
row 103: (102, 0.49152)  (103, 0.01696)  (104, 0.49152) 
row 104: (103, 0.49152)  (104, 0.01696)  (105, 0.49152) 
row 105: (104, 0.49152)  (105, 0.01696)  (106, 0.49152) 
row 106: (105, 0.49152)  (106, 0.01696)  (107, 0.49152) 
row 107: (106, 0.49152)  (107, 0.01696)  (108, 0.49152) 
row 108: (107, 0.49152)  (108, 0.01696)  (109, 0.49152) 
row 109: (108, 0.49152)  (109, 0.01696)  (110, 0.49152) 
row 110: (109, 0.49152)  (110, 0.01696)  (111, 0.49152) 
row 111: (110, 0.49152)  (111, 0.01696)  (112, 0.49152) 
row 112: (111, 0.49152)  (112, 0.01696)  (113, 0.49152) 
row 113: (112, 0.49152)  (113, 0.01696)  (114, 0.49152) 
row 114: (113, 0.49152)  (114, 0.01696)  (115, 0.49152) 
row 115: (114, 0.49152)  (115, 0.01696)  (116, 0.49152) 
row 116: (115, 0.49152)  (116, 0.01696)  (117, 0.49152) 
row 117: (116, 0.49152)  (117, 0.01696)  (118, 0.49152) 
row 118: (117, 0.49152)  (118, 0.01696)  (119, 0.49152) 
row 119: (118, 0.49152)  (119, 0.01696)  (120, 0.49152) 
row 120: (119, 0.49152)  (120, 0.01696)  (121, 0.49152) 
row 121: (120, 0.49152)  (121, 0.01696)  (122, 0.49152) 
row 122: (121, 0.49152)  (122, 0.01696)  (123, 0.49152) 
row 123: (122, 0.49152)  (123, 0.01696)  (124, 0.49152) 
row 124: (123, 0.49152)  (124, 0.01696)  (125, 0.49152) 
row 125: (124, 0.49152)  (125, 0.01696)  (126, 0.49152) 
row 126: (125, 0.49152)  (126, 0.01696)  (127, 0.49152) 
row 127: (126, 0.49152)  (127, 0.01696)  (128, 0.49152) 
row 128: (127, 0.49152)  (128, 0.01696) 
dx = 0.007812
Vec Object: 1 MPI processes
  type: seq
0.
1.00784
1.01575
1.02371
1.03174
1.03984
1.04799
1.05621
1.06449
1.07284
1.08126
1.08974
1.09829
1.1069
1.11558
1.12433
1.13315
1.14204
1.15099
1.16002
1.16912
1.17829
1.18753
1.19684
1.20623
1.21569
1.22523
1.23484
1.24452
1.25428
1.26412
1.27403
1.28403
1.2941
1.30425
1.31448
1.32478
1.33518
1.34565
1.3562
1.36684
1.37756
1.38836
1.39925
1.41023
1.42129
1.43243
1.44367
1.45499
1.4664
1.4779
1.4895
1.50118
1.51295
1.52482
1.53678
1.54883
1.56098
1.57322
1.58556
1.598
1.61053
1.62316
1.63589
1.64872
1.66165
1.67468
1.68782
1.70106
1.7144
1.72785
1.7414
1.75505
1.76882
1.78269
1.79667
1.81077
1.82497
1.83928
1.85371
1.86825
1.8829
1.89767
1.91255
1.92755
1.94267
1.9579
1.97326
1.98874
2.00434
2.02006
2.0359
2.05187
2.06796
2.08418
2.10053
2.117
2.1336
2.15034
2.1672
2.1842
2.20133
2.2186
2.236
2.25353
2.27121
2.28902
2.30698
2.32507
2.34331
2.36168
2.38021
2.39888
2.41769
2.43665
2.45576
2.47502
2.49444
2.514
2.53372
2.55359
2.57362
2.5938
2.61415
2.63465
2.65531
2.67614
2.69713
0.
sin(x) = 0.024541
sin(x) = 0.049068
sin(x) = 0.073565
sin(x) = 0.098017
sin(x) = 0.122411
sin(x) = 0.146730
sin(x) = 0.170962
sin(x) = 0.195090
sin(x) = 0.219101
sin(x) = 0.242980
sin(x) = 0.266713
sin(x) = 0.290285
sin(x) = 0.313682
sin(x) = 0.336890
sin(x) = 0.359895
sin(x) = 0.382683
sin(x) = 0.405241
sin(x) = 0.427555
sin(x) = 0.449611
sin(x) = 0.471397
sin(x) = 0.492898
sin(x) = 0.514103
sin(x) = 0.534998
sin(x) = 0.555570
sin(x) = 0.575808
sin(x) = 0.595699
sin(x) = 0.615232
sin(x) = 0.634393
sin(x) = 0.653173
sin(x) = 0.671559
sin(x) = 0.689541
sin(x) = 0.707107
sin(x) = 0.724247
sin(x) = 0.740951
sin(x) = 0.757209
sin(x) = 0.773010
sin(x) = 0.788346
sin(x) = 0.803208
sin(x) = 0.817585
sin(x) = 0.831470
sin(x) = 0.844854
sin(x) = 0.857729
sin(x) = 0.870087
sin(x) = 0.881921
sin(x) = 0.893224
sin(x) = 0.903989
sin(x) = 0.914210
sin(x) = 0.923880
sin(x) = 0.932993
sin(x) = 0.941544
sin(x) = 0.949528
sin(x) = 0.956940
sin(x) = 0.963776
sin(x) = 0.970031
sin(x) = 0.975702
sin(x) = 0.980785
sin(x) = 0.985278
sin(x) = 0.989177
sin(x) = 0.992480
sin(x) = 0.995185
sin(x) = 0.997290
sin(x) = 0.998795
sin(x) = 0.999699
sin(x) = 1.000000
sin(x) = 0.999699
sin(x) = 0.998795
sin(x) = 0.997290
sin(x) = 0.995185
sin(x) = 0.992480
sin(x) = 0.989177
sin(x) = 0.985278
sin(x) = 0.980785
sin(x) = 0.975702
sin(x) = 0.970031
sin(x) = 0.963776
sin(x) = 0.956940
sin(x) = 0.949528
sin(x) = 0.941544
sin(x) = 0.932993
sin(x) = 0.923880
sin(x) = 0.914210
sin(x) = 0.903989
sin(x) = 0.893224
sin(x) = 0.881921
sin(x) = 0.870087
sin(x) = 0.857729
sin(x) = 0.844854
sin(x) = 0.831470
sin(x) = 0.817585
sin(x) = 0.803208
sin(x) = 0.788346
sin(x) = 0.773010
sin(x) = 0.757209
sin(x) = 0.740951
sin(x) = 0.724247
sin(x) = 0.707107
sin(x) = 0.689541
sin(x) = 0.671559
sin(x) = 0.653173
sin(x) = 0.634393
sin(x) = 0.615232
sin(x) = 0.595699
sin(x) = 0.575808
sin(x) = 0.555570
sin(x) = 0.534998
sin(x) = 0.514103
sin(x) = 0.492898
sin(x) = 0.471397
sin(x) = 0.449611
sin(x) = 0.427555
sin(x) = 0.405241
sin(x) = 0.382683
sin(x) = 0.359895
sin(x) = 0.336890
sin(x) = 0.313682
sin(x) = 0.290285
sin(x) = 0.266713
sin(x) = 0.242980
sin(x) = 0.219101
sin(x) = 0.195090
sin(x) = 0.170962
sin(x) = 0.146730
sin(x) = 0.122411
sin(x) = 0.098017
sin(x) = 0.073565
sin(x) = 0.049068
sin(x) = 0.024541
sin(x) = 0.000000
Vec Object: 1 MPI processes
  type: seq
0.
7.36237e-07
1.47203e-06
2.20694e-06
2.94051e-06
3.67232e-06
4.40191e-06
5.12886e-06
5.85271e-06
6.57304e-06
7.28941e-06
8.00138e-06
8.70854e-06
9.41045e-06
1.01067e-05
1.07969e-05
1.14805e-05
1.21572e-05
1.28267e-05
1.34883e-05
1.41419e-05
1.47869e-05
1.54231e-05
1.60499e-05
1.66671e-05
1.72742e-05
1.7871e-05
1.84569e-05
1.90318e-05
1.95952e-05
2.01468e-05
2.06862e-05
2.12132e-05
2.17274e-05
2.22285e-05
2.27163e-05
2.31903e-05
2.36504e-05
2.40962e-05
2.45275e-05
2.49441e-05
2.53456e-05
2.57319e-05
2.61026e-05
2.64576e-05
2.67967e-05
2.71197e-05
2.74263e-05
2.77164e-05
2.79898e-05
2.82463e-05
2.84858e-05
2.87082e-05
2.89133e-05
2.91009e-05
2.92711e-05
2.94236e-05
2.95583e-05
2.96753e-05
2.97744e-05
2.98555e-05
2.99187e-05
2.99639e-05
2.9991e-05
3e-05
2.9991e-05
2.99639e-05
2.99187e-05
2.98555e-05
2.97744e-05
2.96753e-05
2.95583e-05
2.94236e-05
2.92711e-05
2.91009e-05
2.89133e-05
2.87082e-05
2.84858e-05
2.82463e-05
2.79898e-05
2.77164e-05
2.74263e-05
2.71197e-05
2.67967e-05
2.64576e-05
2.61026e-05
2.57319e-05
2.53456e-05
2.49441e-05
2.45275e-05
2.40962e-05
2.36504e-05
2.31903e-05
2.27163e-05
2.22285e-05
2.17274e-05
2.12132e-05
2.06862e-05
2.01468e-05
1.95952e-05
1.90318e-05
1.84569e-05
1.7871e-05
1.72742e-05
1.66671e-05
1.60499e-05
1.54231e-05
1.47869e-05
1.41419e-05
1.34883e-05
1.28267e-05
1.21572e-05
1.14805e-05
1.07969e-05
1.01067e-05
9.41045e-06
8.70854e-06
8.00138e-06
7.28941e-06
6.57304e-06
5.85271e-06
5.12886e-06
4.40191e-06
3.67232e-06
2.94051e-06
2.20694e-06
1.47203e-06
7.36237e-07
3.67394e-21
Vec Object: 1 MPI processes
  type: seq
0.
0.00248667
0.00497184
0.00745402
0.00993171
0.0124034
0.0148677
0.0173229
0.0197678
0.0222007
0.0246203
0.027025
0.0294135
0.0317842
0.0341358
0.0364668
0.0387759
0.0410616
0.0433226
0.0455574
0.0477649
0.0499435
0.0520921
0.0542093
0.0562939
0.0583445
0.06036
0.0623391
0.0642807
0.0661836
0.0680466
0.0698686
0.0716485
0.0733853
0.0750778
0.0767252
0.0783263
0.0798802
0.081386
0.0828428
0.0842497
0.0856059
0.0869104
0.0881627
0.0893618
0.0905071
0.0915979
0.0926335
0.0936133
0.0945367
0.0954032
0.0962122
0.0969632
0.0976558
0.0982897
0.0988643
0.0993793
0.0998345
0.10023
0.100564
0.100838
0.101052
0.101204
0.101296
0.101326
0.101296
0.101204
0.101052
0.100838
0.100564
0.10023
0.0998345
0.0993793
0.0988643
0.0982897
0.0976558
0.0969632
0.0962122
0.0954032
0.0945367
0.0936133
0.0926335
0.0915979
0.0905071
0.0893618
0.0881627
0.0869104
0.0856059
0.0842497
0.0828428
0.081386
0.0798802
0.0783263
0.0767252
0.0750778
0.0733853
0.0716485
0.0698686
0.0680466
0.0661836
0.0642807
0.0623391
0.06036
0.0583445
0.0562939
0.0542093
0.0520921
0.0499435
0.0477649
0.0455574
0.0433226
0.0410616
0.0387759
0.0364668
0.0341358
0.0317842
0.0294135
0.027025
0.0246203
0.0222007
0.0197678
0.0173229
0.0148677
0.0124034
0.00993171
0.00745402
0.00497184
0.00248667
0.
************************************************************************************************************************
***             WIDEN YOUR WINDOW TO 120 CHARACTERS.  Use 'enscript -r -fCourier9' to print this document            ***
************************************************************************************************************************

---------------------------------------------- PETSc Performance Summary: ----------------------------------------------

./explicit.out on a  named r01n17 with 1 processor, by mae-fenghl Thu May 26 15:05:57 2022
Using Petsc Release Version 3.16.6, Mar 30, 2022 

                         Max       Max/Min     Avg       Total
Time (sec):           2.370e-01     1.000   2.370e-01
Objects:              6.000e+00     1.000   6.000e+00
Flop:                 5.993e+07     1.000   5.993e+07  5.993e+07
Flop/sec:             2.529e+08     1.000   2.529e+08  2.529e+08
MPI Messages:         0.000e+00     0.000   0.000e+00  0.000e+00
MPI Message Lengths:  0.000e+00     0.000   0.000e+00  0.000e+00
MPI Reductions:       0.000e+00     0.000

Flop counting convention: 1 flop = 1 real number operation of type (multiply/divide/add/subtract)
                            e.g., VecAXPY() for real vectors of length N --> 2N flop
                            and VecAXPY() for complex vectors of length N --> 8N flop

Summary of Stages:   ----- Time ------  ----- Flop ------  --- Messages ---  -- Message Lengths --  -- Reductions --
                        Avg     %Total     Avg     %Total    Count   %Total     Avg         %Total    Count   %Total
 0:      Main Stage: 2.3698e-01 100.0%  5.9934e+07 100.0%  0.000e+00   0.0%  0.000e+00        0.0%  0.000e+00   0.0%

------------------------------------------------------------------------------------------------------------------------
See the 'Profiling' chapter of the users' manual for details on interpreting output.
Phase summary info:
   Count: number of times phase was executed
   Time and Flop: Max - maximum over all processors
                  Ratio - ratio of maximum to minimum over all processors
   Mess: number of messages sent
   AvgLen: average message length (bytes)
   Reduct: number of global reductions
   Global: entire computation
   Stage: stages of a computation. Set stages with PetscLogStagePush() and PetscLogStagePop().
      %T - percent time in this phase         %F - percent flop in this phase
      %M - percent messages in this phase     %L - percent message lengths in this phase
      %R - percent reductions in this phase
   Total Mflop/s: 10e-6 * (sum of flop over all processors)/(max time over all processors)
------------------------------------------------------------------------------------------------------------------------
Event                Count      Time (sec)     Flop                              --- Global ---  --- Stage ----  Total
                   Max Ratio  Max     Ratio   Max  Ratio  Mess   AvgLen  Reduct  %T %F %M %L %R  %T %F %M %L %R Mflop/s
------------------------------------------------------------------------------------------------------------------------

--- Event Stage 0: Main Stage

VecView                3 1.0 5.9104e-04 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecCopy            66667 1.0 6.6833e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  3  0  0  0  0   3  0  0  0  0     0
VecSet                 5 1.0 2.0027e-05 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecAXPY            66667 1.0 1.4630e-01 1.0 1.72e+07 1.0 0.0e+00 0.0e+00 0.0e+00 62 29  0  0  0  62 29  0  0  0   118
VecAssemblyBegin   66669 1.0 3.6869e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  2  0  0  0  0   2  0  0  0  0     0
VecAssemblyEnd     66669 1.0 3.6898e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  2  0  0  0  0   2  0  0  0  0     0
MatMult            66667 1.0 3.8161e-02 1.0 4.27e+07 1.0 0.0e+00 0.0e+00 0.0e+00 16 71  0  0  0  16 71  0  0  0  1120
MatAssemblyBegin       1 1.0 0.0000e+00 0.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
MatAssemblyEnd         1 1.0 4.4107e-05 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
MatView                1 1.0 9.1910e-04 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
------------------------------------------------------------------------------------------------------------------------

Memory usage is given in bytes:

Object Type          Creations   Destructions     Memory  Descendants' Mem.
Reports information only for process 0.

--- Event Stage 0: Main Stage

              Vector     3              3         7968     0.
              Matrix     1              1        13596     0.
              Viewer     2              1          840     0.
========================================================================================================================
Average time to get PetscTime(): 0.
#PETSc Option Table entries:
-ksp_atol 1.0e-50
-ksp_converged_reason
-ksp_gmres_modifiedgramschmidt
-ksp_gmres_restart 30
-ksp_max_it 1500
-ksp_monitor_short
-ksp_rtol 1.0e-10
-ksp_type gmres
-ksp_view
-log_view
-pc_type asm
-sub_ksp_type richardson
-sub_pc_type icc
#End of PETSc Option Table entries
Compiled without FORTRAN kernels
Compiled with full precision matrices (default)
sizeof(short) 2 sizeof(int) 4 sizeof(long) 8 sizeof(void*) 8 sizeof(PetscScalar) 8 sizeof(PetscInt) 4
Configure options: --with-mpi-dir=/share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mpi/intel64 --with-blaslapack-dir=/share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mkl --with-scalapack-include=/share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mkl/include --with-scalapack-lib="-L/share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mkl/lib/intel64 -lmkl_blacs_intelmpi_lp64 -lmkl_scalapack_lp64" --with-hdf5-dir=/work/mae-fenghl/lib/hdf5-1.12.1 --with-debugging=no --prefix=/work/mae-fenghl/lib/petsc-3.16.6 --download-hypre=/work/mae-fenghl/HPC/Homework_5/petsc-3.16.6-package/hypre-2.23.0.tar.gz --download-mumps=/work/mae-fenghl/HPC/Homework_5/petsc-3.16.6-package/petsc-pkg-mumps-6d1470374d32.tar.gz --download-metis=/work/mae-fenghl/HPC/Homework_5/petsc-3.16.6-package/petsc-pkg-metis-c8d2dc1e751e.tar.gz COPTFLAGS="-O3 -march=native -mtune=native" CXXOPTFLAGS="-O3 -march=native -mtune=native" FOPTFLAGS="-O3 -march=native -mtune=native"
-----------------------------------------
Libraries compiled on 2022-05-21 07:00:50 on login05 
Machine characteristics: Linux-3.10.0-862.el7.x86_64-x86_64-with-redhat-7.5-Maipo
Using PETSc directory: /work/mae-fenghl/lib/petsc-3.16.6
Using PETSc arch: 
-----------------------------------------

Using C compiler: /share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mpi/intel64/bin/mpicc  -fPIC -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O3 -march=native -mtune=native  -std=c99 
Using Fortran compiler: /share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mpi/intel64/bin/mpif90  -fPIC -Wall -ffree-line-length-0 -Wno-unused-dummy-argument -O3 -march=native -mtune=native     -std=c99
-----------------------------------------

Using include paths: -I/work/mae-fenghl/lib/petsc-3.16.6/include -I/share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mkl/include -I/work/mae-fenghl/lib/hdf5-1.12.1/include -I/share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mpi/intel64/include
-----------------------------------------

Using C linker: /share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mpi/intel64/bin/mpicc
Using Fortran linker: /share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mpi/intel64/bin/mpif90
Using libraries: -Wl,-rpath,/work/mae-fenghl/lib/petsc-3.16.6/lib -L/work/mae-fenghl/lib/petsc-3.16.6/lib -lpetsc -Wl,-rpath,/work/mae-fenghl/lib/petsc-3.16.6/lib -L/work/mae-fenghl/lib/petsc-3.16.6/lib -L/share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mkl/lib/intel64 -Wl,-rpath,/share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mkl/lib/intel64 -Wl,-rpath,/work/mae-fenghl/lib/hdf5-1.12.1/lib -L/work/mae-fenghl/lib/hdf5-1.12.1/lib -Wl,-rpath,/share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mpi/intel64/lib/release_mt -L/share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mpi/intel64/lib/release_mt -Wl,-rpath,/share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mpi/intel64/lib -L/share/intel/2018u4/compilers_and_libraries_2018.5.274/linux/mpi/intel64/lib -Wl,-rpath,/usr/lib/gcc/x86_64-redhat-linux/4.8.5 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5 -Wl,-rpath,/opt/intel/mpi-rt/2017.0.0/intel64/lib/release_mt -Wl,-rpath,/opt/intel/mpi-rt/2017.0.0/intel64/lib -lHYPRE -lcmumps -ldmumps -lsmumps -lzmumps -lmumps_common -lpord -lmkl_blacs_intelmpi_lp64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -lhdf5_hl -lhdf5 -lmetis -lm -lX11 -lstdc++ -ldl -lmpifort -lmpi -lmpigi -lrt -lpthread -lgfortran -lm -lgfortran -lm -lgcc_s -lquadmath -lstdc++ -ldl
-----------------------------------------

